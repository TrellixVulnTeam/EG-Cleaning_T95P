{"ast":null,"code":"// import React from 'react';\n// // import PropTypes from 'prop-types';\n// import '../App.css';\n// // import {Motion, spring} from 'react-motion';\n// // import Input from './Input';\n// // import SubmitButton from './SubmitButton';\n// import classNames from 'classnames';\n// // import GoogleLogin from 'react-google-login';\n// import { SectionProps } from '../utils/SectionProps';\n// const propTypes = {\n//     ...SectionProps.types\n// }\n// const defaultProps = {\n//     ...SectionProps.defaults\n// }\n// const openModal = (e) => {\n//     e.preventDefault();\n// }\n// const closeModal = (e) => {\n//     e.preventDefault();\n// }   \n// const Sigin = ({\n// \tclassName,\n// \ttopOuterDivider,\n// \tbottomOuterDivider,\n// \ttopDivider,\n// \tbottomDivider,\n// \thasBgColor,\n// \tinvertColor,\n// \t...props\n// }) => {\n// const outerClasses = classNames(\n// \t'hero section center-content',\n// \ttopOuterDivider && 'has-top-divider',\n// \tbottomOuterDivider && 'has-bottom-divider',\n// \thasBgColor && 'has-bg-color',\n// \tinvertColor && 'invert-color',\n// \tclassName\n// );\n// const innerClasses = classNames(\n// \t'hero-inner section-inner',\n// \ttopDivider && 'has-top-divider',\n// \tbottomDivider && 'has-bottom-divider'\n// );\n// // const handleLogin = async googleData => {  \n// // \tconst res = await fetch(\"/api/v1/auth/google\", {\n// // \tmethod: \"POST\",\n// // \tbody: JSON.stringify({\n// // \ttoken: googleData.tokenId\n// //   }),\n// //   headers: {\n// // \t\"Content-Type\": \"application/json\"\n// //   }\n// // }); \n// // const data = await res.json();\n// // console.log(data);\n// // store returned user somehow\n// // return data;\n// // }\n// return (\n// \t<section\n// \t\t// {...props}\n// \t\tclassName={outerClasses}>\n// \t\t<div className=\"container-sm\">\n// \t\t\tSignin now and join+ the community!\n// \t\t\t<div className={innerClasses}>\n// \t\t\t</div>\n// \t\t</div>\n// \t</section>\n// );\n// }\n// Sigin.propTypes = propTypes;\n// Sigin.defaultProps = defaultProps;\n// export default Sigin;\n// /* <GoogleLogin\n// clientId=\"159989980998-rifisq2hq3mn2lj2gf08tdjns6rtlvin.apps.googleusercontent.com\"\n// buttonText=\"Log in with Google\"\n// onSuccess={handleLogin}\n// onFailure={handleLogin}\n// cookiePolicy={'single_host_origin'}\n// /> */\n// // class SignExpanded extends Component {\n// // \tconstructor(props) {\n// // \t\tsuper(props);\n// // \t\tthis.state = {\n// // \t\t\tflexState: false,\n// // \t\t\tanimIsFinished: false\n// // \t\t};\n// // \t}\n// // \tcomponentDidMount () {\n// //      \tthis.setState({flexState: !this.state.flexState});  \n// //   \t}\n// // \tisFinished = () => {\n// // \t\tthis.setState({animIsFinished: true});\n// // \t}\n// // \trender () {\n// // \t\treturn (\n// // \t\t\t<Motion style={{\n// // \t\t\t\tflexVal: spring(this.state.flexState ? 8 : 1)\n// // \t\t\t}} onRest={this.isFinished}>\n// // \t\t\t{({flexVal}) =>\n// // \t\t\t<div className={this.props.type==='signIn' ? 'signInExpanded' : 'signUpExpanded'} style={{\n// // \t\t\t\tflexGrow: `${flexVal}`\n// // \t\t\t}}>\n// // \t\t\t\t<Motion style={{ \n// // \t\t\t\t\topacity: spring(this.state.flexState ? 1 : 0,{stiffness: 300, damping: 17}),\n// // \t\t\t\t\ty: spring(this.state.flexState ? 0 : 50, {stiffness: 100, damping: 17})\n// // \t\t\t\t }} >\n// // \t\t\t\t\t\t{({opacity, y}) =>\n// // \t\t\t\t\t\t<form className='logForm' style={{\n// // \t\t\t\t\t\t\tWebkitTransform: `translate3d(0, ${y}px, 0)`,\n// // \t\t\t\t\t\t\ttransform: `translate3d(0, ${y}px, 0)`,\n// // \t\t\t\t\t\t\topacity: `${opacity}`\n// // \t\t\t\t\t\t}}>\n// // \t\t\t\t\t\t\t<h2>{this.props.type === 'signIn' ? 'SIGN IN' : 'SIGN UP'}</h2>\n// // \t\t\t\t\t\t\t<Input\n// // \t\t\t\t\t\t\t\tid=\"login\"\n// // \t\t\t\t\t\t\t\ttype=\"text\"\n// // \t\t\t\t\t\t\t\tplaceholder=\"LOGIN\" />\n// // \t\t\t\t\t\t\t<Input\n// // \t\t\t\t\t\t\t\tid=\"password\"\n// // \t\t\t\t\t\t\t\ttype=\"password\"\n// // \t\t\t\t\t\t\t\tplaceholder=\"PASSWORD\" />\n// // \t\t\t\t\t\t\t<SubmitButton type={this.props.type}></SubmitButton>\n// // \t\t\t\t\t\t\t<a href=\"url\" className='forgotPass'>{this.props.type === 'signIn' ? 'Forgot password?' : ''}</a>\n// // \t\t\t\t\t\t</form>\n// // \t\t\t\t\t\t}\n// // \t\t\t\t</Motion>\n// // \t\t\t</div>\n// // \t\t}\n// // \t\t\t</Motion>\n// // \t\t);\n// // \t}\n// // }\n// // SignExpanded.propTypes ={\n// // \ttype: PropTypes.string\t\n// // };\n// // export default SignExpanded;","map":{"version":3,"sources":["C:/Users/ErikGabriel/Desktop/Programming/EG-Cleaning/src/components/SignExpanded.js"],"names":[],"mappingssourcesContent":["// import React from 'react';\r\n// // import PropTypes from 'prop-types';\r\n// import '../App.css';\r\n// // import {Motion, spring} from 'react-motion';\r\n// // import Input from './Input';\r\n// // import SubmitButton from './SubmitButton';\r\n// import classNames from 'classnames';\r\n// // import GoogleLogin from 'react-google-login';\r\n// import { SectionProps } from '../utils/SectionProps';\r\n\r\n// const propTypes = {\r\n//     ...SectionProps.types\r\n// }\r\n  \r\n// const defaultProps = {\r\n//     ...SectionProps.defaults\r\n// }\r\n\r\n// const openModal = (e) => {\r\n//     e.preventDefault();\r\n// }\r\n\r\n// const closeModal = (e) => {\r\n//     e.preventDefault();\r\n// }   \r\n\r\n// const Sigin = ({\r\n// \tclassName,\r\n// \ttopOuterDivider,\r\n// \tbottomOuterDivider,\r\n// \ttopDivider,\r\n// \tbottomDivider,\r\n// \thasBgColor,\r\n// \tinvertColor,\r\n// \t...props\r\n// }) => {\r\n\r\n// const outerClasses = classNames(\r\n// \t'hero section center-content',\r\n// \ttopOuterDivider && 'has-top-divider',\r\n// \tbottomOuterDivider && 'has-bottom-divider',\r\n// \thasBgColor && 'has-bg-color',\r\n// \tinvertColor && 'invert-color',\r\n// \tclassName\r\n// );\r\n\r\n// const innerClasses = classNames(\r\n// \t'hero-inner section-inner',\r\n// \ttopDivider && 'has-top-divider',\r\n// \tbottomDivider && 'has-bottom-divider'\r\n// );\r\n\r\n// // const handleLogin = async googleData => {  \r\n// // \tconst res = await fetch(\"/api/v1/auth/google\", {\r\n// // \tmethod: \"POST\",\r\n// // \tbody: JSON.stringify({\r\n// // \ttoken: googleData.tokenId\r\n// //   }),\r\n// //   headers: {\r\n// // \t\"Content-Type\": \"application/json\"\r\n// //   }\r\n// // }); \r\n// // const data = await res.json();\r\n// // console.log(data);\r\n// // store returned user somehow\r\n// // return data;\r\n// // }\r\n\r\n// return (\r\n// \t<section\r\n// \t\t// {...props}\r\n// \t\tclassName={outerClasses}>\r\n// \t\t<div className=\"container-sm\">\r\n// \t\t\tSignin now and join+ the community!\r\n// \t\t\t<div className={innerClasses}>\r\n\r\n// \t\t\t</div>\r\n// \t\t</div>\r\n// \t</section>\r\n// );\r\n// }\r\n\r\n// Sigin.propTypes = propTypes;\r\n// Sigin.defaultProps = defaultProps;\r\n// export default Sigin;\r\n\r\n// /* <GoogleLogin\r\n// clientId=\"159989980998-rifisq2hq3mn2lj2gf08tdjns6rtlvin.apps.googleusercontent.com\"\r\n// buttonText=\"Log in with Google\"\r\n// onSuccess={handleLogin}\r\n// onFailure={handleLogin}\r\n// cookiePolicy={'single_host_origin'}\r\n// /> */\r\n// // class SignExpanded extends Component {\r\n\r\n// // \tconstructor(props) {\r\n// // \t\tsuper(props);\r\n// // \t\tthis.state = {\r\n// // \t\t\tflexState: false,\r\n// // \t\t\tanimIsFinished: false\r\n// // \t\t};\r\n// // \t}\r\n\r\n// // \tcomponentDidMount () {\r\n// //      \tthis.setState({flexState: !this.state.flexState});  \r\n// //   \t}\r\n\r\n\r\n// // \tisFinished = () => {\r\n// // \t\tthis.setState({animIsFinished: true});\r\n// // \t}\r\n\r\n// // \trender () {\r\n// // \t\treturn (\r\n// // \t\t\t<Motion style={{\r\n// // \t\t\t\tflexVal: spring(this.state.flexState ? 8 : 1)\r\n// // \t\t\t}} onRest={this.isFinished}>\r\n// // \t\t\t{({flexVal}) =>\r\n// // \t\t\t<div className={this.props.type==='signIn' ? 'signInExpanded' : 'signUpExpanded'} style={{\r\n// // \t\t\t\tflexGrow: `${flexVal}`\r\n// // \t\t\t}}>\r\n// // \t\t\t\t<Motion style={{ \r\n// // \t\t\t\t\topacity: spring(this.state.flexState ? 1 : 0,{stiffness: 300, damping: 17}),\r\n// // \t\t\t\t\ty: spring(this.state.flexState ? 0 : 50, {stiffness: 100, damping: 17})\r\n// // \t\t\t\t }} >\r\n// // \t\t\t\t\t\t{({opacity, y}) =>\r\n// // \t\t\t\t\t\t<form className='logForm' style={{\r\n// // \t\t\t\t\t\t\tWebkitTransform: `translate3d(0, ${y}px, 0)`,\r\n// // \t\t\t\t\t\t\ttransform: `translate3d(0, ${y}px, 0)`,\r\n// // \t\t\t\t\t\t\topacity: `${opacity}`\r\n// // \t\t\t\t\t\t}}>\r\n// // \t\t\t\t\t\t\t<h2>{this.props.type === 'signIn' ? 'SIGN IN' : 'SIGN UP'}</h2>\r\n// // \t\t\t\t\t\t\t<Input\r\n// // \t\t\t\t\t\t\t\tid=\"login\"\r\n// // \t\t\t\t\t\t\t\ttype=\"text\"\r\n// // \t\t\t\t\t\t\t\tplaceholder=\"LOGIN\" />\r\n// // \t\t\t\t\t\t\t<Input\r\n// // \t\t\t\t\t\t\t\tid=\"password\"\r\n// // \t\t\t\t\t\t\t\ttype=\"password\"\r\n// // \t\t\t\t\t\t\t\tplaceholder=\"PASSWORD\" />\r\n// // \t\t\t\t\t\t\t<SubmitButton type={this.props.type}></SubmitButton>\r\n// // \t\t\t\t\t\t\t<a href=\"url\" className='forgotPass'>{this.props.type === 'signIn' ? 'Forgot password?' : ''}</a>\r\n// // \t\t\t\t\t\t</form>\r\n// // \t\t\t\t\t\t}\r\n// // \t\t\t\t</Motion>\r\n// // \t\t\t</div>\r\n// // \t\t}\r\n// // \t\t\t</Motion>\r\n// // \t\t);\r\n// // \t}\r\n\r\n// // }\r\n\r\n// // SignExpanded.propTypes ={\r\n// // \ttype: PropTypes.string\t\r\n// // };\r\n\r\n// // export default SignExpanded;"]},"metadata":{},"sourceType":"module"}